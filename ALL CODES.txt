-- Q.1 Query all columns for all American cities in the CITY table with populations larger than 100000. 
-- The countryCode for America is USA.
--- Ans:SELECT * FROM city where countrycode="USA" and population>100000;


-- Q.2 Query the name field for all American cities in the CITY table with populations larger than 120000. 
-- The countryCode for America is USA.
--- Ans:SELECT name FROM city where countrycode="USA" and population>120000;


-- Q.3 Query all columns (attributes) for every row in the CITY table. 
--- Ans:SELECT * FROM city ;


-- Q.4 Query all columns for a city in CITY with the id 1661.
--- Ans:SELECT * from city where id=1661 ;


-- Q.5 Query all attributes of every Japanese city in the CITY table. The countryCODE for Japan is JPN.
--- Ans:SELECT * from city where countrycode='JPN' ;


-- Q.6 Query the names of all the Japanese cities in the CITY table. The countryCODE for Japan is JPN.
--- Ans:SELECT name FROM city where countrycode="JPN"


-- Q.7 Query a list of CITY and STATE from the station table.
--- Ans:SELECT city, state FROM  station;


-- Q.8 Query a list of CITY names from STATION for cities that have an even ID number. 
-- Print the results in any order, but exclude duplicates from the answer.
--- Ans: SELECT distinct city from station where id%2=0;


-- Q.9 Find the difference between the total number of CITY entries in the table and the number of distinct CITY entries in the table.
--- Ans: SELECT (count(city)-count(distinct city)) as differance  from station ;


-- Q.10 Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths 
-- (i.e.: number of characters in the name). If there is more than one smallest or largest city, 
-- choose the one that comes first when ordered alphabetically.
--- Ans: (select city,length(city) as len from station order by length(city), city  limit 1)
          union 
         (select city,length(city) as len from station order by length(city)desc,city limit 1);
         
         
-- Q11. Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from station. Your result cannot contain duplicates.
--- Ans: select DISTINCT city from station where city like'A%' OR CITY LIKE'E%'OR CITY LIKE'I%' OR CITY LIKE'O%'OR CITY LIKE'U%';


-- Q12. Query the list of CITY names ending with vowels (a, e, i, o, u) from station. Your result cannot contain duplicates.
--- Ans: select DISTINCT city from station where city like'%A' OR CITY LIKE'%E'OR CITY LIKE'%I' OR CITY LIKE'%O'OR CITY LIKE'%U';


-- Q13. Query the list of CITY names from station that do not start with vowels. Your result cannot contain duplicates.
--- Ans: select DISTINCT city from station where LEFT(CITY,1) NOT IN('A','E','I','O','U');


-- Q14. Query the list of CITY names from station that do not end with vowels. Your result cannot contain duplicates.
 --- Ans: select DISTINCT city from station where RIGHT(CITY,1) NOT IN('A','E','I','O','U');        


-- Q15. Query the list of CITY names from station that either do not start with vowels or do not end with vowels. 
-- Your result cannot contain duplicates.
--- Ans: select DISTINCT city from station where (RIGHT(CITY,1) NOT IN('A','E','I','O','U')) 0R (LEFT(CITY,1) NOT IN('A','E','I','O','U'));
         

-- Q16. Query the list of CITY names from station that  do not start with vowels or do not end with vowels. 
-- Your result cannot contain duplicates.
--- Ans: select DISTINCT city from station where (RIGHT(CITY,1) NOT IN('A','E','I','O','U')) 0R (LEFT(CITY,1) NOT IN('A','E','I','O','U'));
        
        
-- Q.17 Write an SQL query that reports the products that were only sold in the first quarter of 2019. 
-- That is, between 2019-01-01 and 2019-03-31 inclusive. Return the result table in any order.
--- Ans: select t1.product_id,t1.product_name from
         product t1 inner join sales t2 on t1.product_id=t2.product_id 
         where t2.product_id not in (select product_id from sales where sales_date > '2019-03-31');
         
         
-- Q.18 Write an SQL query to find all the authors that viewed at least one of their own articles. 
-- Return the result table sorted by id in ascending order.        
--- Ans: select distinct author_id as id from views where author_id = viewer_id order by author_id;


-- Q.19 Write an SQL query to find the percentage of immediate orders in the table, rounded to 2 decimal places.
--- Ans: select distinct author_id as id from views where author_id = viewer_id order by author_id;
